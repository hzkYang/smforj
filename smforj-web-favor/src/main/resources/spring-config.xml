<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd">  

	<!-- Activates annotation-based bean configuration -->
	<context:annotation-config /> 
	<!-- Scans for application @Components to deploy 
		base-package 基本包信息，com+公司+项目
	-->
	<context:component-scan base-package="com.smforj.ssm">
	    <!-- mvc配置文件中已经扫描过了 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 

	 <!-- 国际化 -->  
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">  
        <property name="basenames">  
            <list>  
                <value>i18n</value>  
            </list>  
        </property>  
    </bean>  
	 <!-- 国际化操作 拦截器  -->           
    <!--  <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  -->
      <!-- 基于Cookie的本地化解析器 -->
     <!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
       <property name="cookieMaxAge" value="604800"/>
       <property name="defaultLocale" value="zh_CN"/>
       <property name="cookieName" value="Language"></property>
     </bean> -->
    <!-- 基于Session的国际化配置 -->    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
     	<property name="defaultLocale" value="zh_CN"></property>
    </bean>   
    
    <!-- global exception -->
    <!-- 全局异常配置 start -->    
<!--     <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
         <property name="exceptionMappings">    
             <props>    
                 <prop key="java.lang.Exception">errors/error</prop>    
                 <prop key="java.lang.Throwable">errors/err</prop>    
             </props>    
         </property>    
         <property name="statusCodes">    
             <props>    
                 <prop key="errors/error">500</prop>    
                 <prop key="errors/404">404</prop>    
             </props>    
         </property>    
         设置日志输出级别，不定义则默认不输出警告等错误日志信息    
         <property name="warnLogCategory" value="WARN"></property>    
         默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置    
         <property name="defaultErrorView" value="errors/error"></property>    
         默认HTTP状态码    
         <property name="defaultStatusCode" value="500"></property>    
     </bean>  -->   
     <!-- 全局异常配置 end -->   
   <!-- 数据源 拦截器 用于多数据源-->
	<bean id="dataSourceAop" class="com.smforj.ssm.frame.core.aop.DataSourceAop" />
	<bean id="templeteAop" class="com.smforj.ssm.frame.core.aop.TempleteAop" />

	<!-- 数据库配置文件位置 -->
	<context:property-placeholder location="classpath:/jdbc.properties"/>
	<!-- 配置dbcp数据源 
		com.mchange.v2.c3p0.ComboPooledDataSource 相关配置在jdbc.proerties
	-->
<!-- 	<bean id="dataSourceMysqlSys" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
		<property name="driverClass" value="${mysql.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${mysql.jdbc.url}" />
		<property name="user" value="${mysql.jdbc.user}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<property name="initialPoolSize" value="${mysql.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${mysql.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${mysql.jdbc.maxPoolSize}" />
		<property name="checkoutTimeout" value="${mysql.jdbc.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${mysql.jdbc.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${mysql.jdbc.maxIdleTime}" />
		<property name="maxStatements" value="${mysql.jdbc.maxStatements}" />
		<property name="testConnectionOnCheckout" value="${mysql.jdbc.testConnectionOnCheckout}" />
	</bean>  -->
		<!-- 配置dbcp数据源 
		org.apache.commons.dbcp.BasicDataSource 相关配置在jdbc.proerties
	-->
	<bean id="mdefault" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minIdle" value="${jdbc.minIdle}" />        
		<property name="maxIdle" value="${jdbc.maxIdle}" />       
		<property name="maxWait" value="${jdbc.maxWait}" />        
		<property name="maxActive" value="${jdbc.maxActive}" />    
		<property name="initialSize" value="${jdbc.initialSize}" /> 
	</bean> 
	<bean id="m10001" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="${m10001.jdbc.driverClassName}" />
		<property name="url" value="${m10001.jdbc.url}"/>
		<property name="username" value="${m10001.jdbc.username}" />
		<property name="password" value="${m10001.jdbc.password}" />
		<property name="minIdle" value="${m10001.jdbc.minIdle}" />        
		<property name="maxIdle" value="${m10001.jdbc.maxIdle}" />       
		<property name="maxWait" value="${m10001.jdbc.maxWait}" />        
		<property name="maxActive" value="${m10001.jdbc.maxActive}" />    
		<property name="initialSize" value="${m10001.jdbc.initialSize}" /> 
	</bean>   
	
	<!-- 动态数据源 用于多数据源-->
	<bean id="dataSource" class="com.smforj.ssm.frame.core.dao.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<entry key="mdefault" value-ref="mdefault" />
			    <entry key="m10001" value-ref="m10001" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="mdefault" />
	</bean> 

 <!-- 切面设置datasource 主要针对子系统-->
	 <aop:config>
		<aop:aspect id="dataSourceAspect" ref="dataSourceAop">
			<aop:pointcut id="dsMysql" expression="execution(* com.smforj.ssm..*.controller.*.*(..))" /> 
		<!-- 	<aop:pointcut id="dsOracle" expression="execution(* com.controller.oracle.*.*(..))" /> -->
			<aop:before method="setDataSource" pointcut-ref="dsMysql"/>
			<!-- <aop:before method="setdataSourceOracle" pointcut-ref="dsOracle" /> -->
		</aop:aspect> 
		
		<!-- 模板aop -->
		<aop:aspect id="templeteAspect" ref="templeteAop">
			<aop:pointcut id="apoint" expression="execution(* com.smforj.ssm..*.controller.admin.*.*(..))" />  
			<aop:pointcut id="fpoint" expression="execution(* com.smforj.ssm..*.controller.front.*.*(..))" />  
			<aop:before method="setTempleteAdmin" pointcut-ref="apoint"/>  
			<aop:before method="setTempleteFront" pointcut-ref="fpoint"/> 
		</aop:aspect> 
	</aop:config> 

	<!-- 使用JDBC事物 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- AOP配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="query*" read-only="true" propagation="REQUIRED" /> -->
			<tx:method name="delete*"  propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" read-only="false" 
			rollback-for="java.lang.Exception"/>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" /> 
			<!-- <tx:method name="*" propagation="REQUIRED" />  -->
		</tx:attributes> 
	</tx:advice>
	
	<!-- 配置AOP切面 -->
	<aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.smforj.ssm..*.service.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config> 
    
    <!-- 支持自动扫描Mapper.xml功能，不用在 sqlMapConfig.xml 配置相关信息-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/mysql/**/*Mapper.xml"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 
		支持自动生成操作，不要让生成的*Mapper.java与对象基本dao一个包，防止混淆
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.smforj.ssm.sys.mapper" />
		<!-- 一定要用value="sqlSessionFactory" 使用ref会导致${jdbc.password}失效 -->
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>   -->
		<!-- 只扫描 注解为mforjdao -->
		<property name="annotationClass" value="com.smforj.ssm.constant.MforjDao"></property>
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
	</bean>

	<!-- 配置SQLSession模板 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" /> 
	</bean>

</beans>